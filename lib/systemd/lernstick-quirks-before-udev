#!/bin/sh

MODPROBE_CONF="/etc/modprobe.d/lernstick-quirks.conf"

> $MODPROBE_CONF

# Seen on a HP ZBook Studio x360 G5 (4QH74EA#UUZ) with the WLAN adapter
# Intel Corporation Wireless-AC 9560 [Jefferson Peak] (rev 10)
# with linux 5.2.9-2~bpo10+1 and firmware-linux-nonfree 20190717-2~bpo10+1:
# The iwlwifi driver fails to load the firmware correctly, retries every 3 seconds,
# almost freezes the system and makes using the touchpad and keyboard almost impossible.
#
# Fixed with linux-image-5.7.0-0.bpo.2-amd64 and firmware-linux-nonfree 20200721-1~bpo10+1
#
#if lspci -n | grep 8086:a370 -q
#then
#	echo "blacklisting driver \"iwlwifi\""
#	echo "# The WLAN adapter in your machine is currently not supported." >> $MODPROBE_CONF
#	echo "# Please use a supported, external USB WLAN adapter." >> $MODPROBE_CONF
#	echo "blacklist iwlwifi" >> $MODPROBE_CONF
#fi

# ... same thing on a HP ProBook 440 G6 with the WLAN adapter
# Intel Corporation Cannon Point-LP CNVi [Wireless AC] (rev 11)
#if lspci -n | grep 8086:9df0 -q
#then
#	echo "blacklisting driver \"iwlwifi\""
#	echo "# The WLAN adapter in your machine is currently not supported." >> $MODPROBE_CONF
#	echo "# Please use a supported, external USB WLAN adapter." >> $MODPROBE_CONF
#	echo "blacklist iwlwifi" >> $MODPROBE_CONF
#fi

# special handling of MacBook Pro 13,2 wifi driver
# (MAC address of the wireless card has to be inserted into the corresponding firmware txt file)
if lspci -n | grep 14e4:43ba -q
then
	TXT_FILE="/lib/firmware/brcm/brcmfmac43602-pcie.Apple Inc.-MacBookPro13,2.txt"
	# to get the wifi adapter MAC address we have to first load the brcmfmac driver without our special txt file
	mv "${TXT_FILE}" "${TXT_FILE}.bk"
	echo "loading driver brcmfmac..."
	modprobe brcmfmac
	echo "waiting 5 seconds for brcmfmac driver to get the MAC address of the adapter..."
	sleep 5
	mv "${TXT_FILE}.bk" "${TXT_FILE}"
	MAC_ADDRESS="$(ip l show $(awk 'NR==3{print $1}' /proc/net/wireless | tr -d :) | awk '/ether/{print $2}')"
	echo "MAC address: ${MAC_ADDRESS}"
	sed -i "s/macaddr=.*/macaddr=${MAC_ADDRESS}/g" "${TXT_FILE}"
	echo "removing driver brcmfmac..."
	modprobe -r brcmfmac
fi

# special handling for MacBook Pro's with T2 security chip
if lspci -n | grep 106b:1801 -q
then
	echo "loading driver apple-bce..."
	modprobe apple-bce
fi

# special handling for Broadcom wl driver
# PCI id list based on https://salsa.debian.org/broadcom-sta-team/broadcom-sta/-/blob/7d9772e1a4bea7310ff8caeaae220c939de92b70/debian/broadcom-sta.ids
if lspci -n | grep -e 14e4:4313 -e 14e4:4727 -e 14e4:432a  -e 14e4:432b -e 14e4:432d -e 14e4:4331 -e 14e4:4358 -e 14e4:4359 -e 14e4:4365 -e 14e4:43a0 -e 14e4:43b1 -q
then
	echo "blacklisting b43, b43legacy, bcm43xx, bcma, brcm80211, brcmfmac, brcmsmac, ssb..."

	cat <<EOF>>$MODPROBE_CONF
blacklist b43
blacklist b43legacy
blacklist bcm43xx
blacklist bcma
blacklist brcm80211
blacklist brcmfmac
blacklist brcmsmac
blacklist ssb
EOF
fi
