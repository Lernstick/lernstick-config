#!/bin/bash

## live-config(7) - System Configuration Components
## Copyright (C) 2006-2015 Daniel Baumann <mail@daniel-baumann.ch>
##
## This program comes with ABSOLUTELY NO WARRANTY; for details see COPYING.
## This is free software, and you are welcome to redistribute it
## under certain conditions; see COPYING for details.

# We have to use /run/ instead of /tmp/ because /tmp/ gets overwritten during boot by
# systemd's tmp.mount, which is also mounting over non-empty directories.
DEBCONF_FILE=/run/lernstick-user-setup

Cmdline ()
{
	LIVE_USERNAME="user"
	LIVE_USER_FULLNAME="Debian Live user"
	LIVE_USER_DEFAULT_GROUPS="audio cdrom dip floppy video plugdev netdev powerdev scanner bluetooth debian-tor"

        # Reading configuration files from filesystem and live-media
        for _FILE in /etc/live/config.conf /etc/live/config/* \
                     /lib/live/mount/medium/live/config.conf /lib/live/mount/medium/live/config/*
        do
                if [ -e "${_FILE}" ]
                then
                        . "${_FILE}"
                fi
        done

	# Reading kernel command line
	for _PARAMETER in $(cat /proc/cmdline)
	do
		case "${_PARAMETER}" in
			live-config.user-default-groups=*|user-default-groups=*)
				LIVE_USER_DEFAULT_GROUPS="${_PARAMETER#*user-default-groups=}"
				;;

			live-config.user-fullname=*|user-fullname=*)
				LIVE_USER_FULLNAME="${_PARAMETER#*user-fullname=}"
				;;

			live-config.username=*|username=*)
				LIVE_USERNAME="${_PARAMETER#*username=}"
				;;
		esac
	done
}

Config ()
{
	# Checking if package is already configured differently
	if grep -q "^${LIVE_USERNAME}:" /etc/passwd
	then
		exit 0
	fi

	# Adjust formating of groups
	if [ -n "${LIVE_USER_DEFAULT_GROUPS}" ]
	then
		LIVE_USER_DEFAULT_GROUPS="$(echo ${LIVE_USER_DEFAULT_GROUPS} | sed -e 's|,| |g')"
	fi

	# Make sure user is not in sudo group if sudo is disabled
	case "${LIVE_CONFIG_NOROOT}" in
		true)
			LIVE_USER_DEFAULT_GROUPS="$(echo ${LIVE_USER_DEFAULT_GROUPS} | sed -e 's|sudo||')"
			;;
	esac

	# Default password is: live
	# passwords can be generated with 'echo "live" | mkpasswd -s',
	#   - "live" is           '8Ab05sVQ4LLps'
	#   - a blank password is 'U6aMy0wojraho'
	_PASSWORD="U6aMy0wojraho"

cat > ${DEBCONF_FILE} << EOF
user-setup passwd/make-user boolean true
user-setup passwd/root-password-crypted string *
user-setup passwd/user-password-crypted string ${_PASSWORD}
user-setup passwd/user-default-groups string ${LIVE_USER_DEFAULT_GROUPS}
user-setup passwd/user-fullname string ${LIVE_USER_FULLNAME}
user-setup passwd/username string ${LIVE_USERNAME}
user-setup passwd/user-uid string 1000
EOF

	retrying-debconf-set-selections ${DEBCONF_FILE}

	# Because of the parallelism of systemd it might happen from time to time that
	# another unit locks the debconf database in between returning from the line
	# above and executing the line below. Yes, we have run into this bug and it
	# produces error messages like this in the journal:
	# lernstick-user-setup[435]: debconf: DbDriver "config": /var/cache/debconf/config.dat is locked by another process: Resource temporarily unavailabl
	# The result is that the default user doesn't get created and the whole system
	# is broken.
	# Therefore we have to retry user-setup-apply below until it succeeds.

	COUNTER=100
	while
		echo "calling /usr/lib/user-setup/user-setup-apply"
		# Workaround for bug in shadow
		set +e
		/usr/lib/user-setup/user-setup-apply
		RETURN_VALUE=$?
		set -e
		echo "return value of /usr/lib/user-setup/user-setup-apply: ${RETURN_VALUE}"
		if [ ${RETURN_VALUE} -ne 0 ]
		then
			echo "/usr/lib/user-setup/user-setup-apply failed, maybe a temporary lock?"
			RANDOM_WAIT="$(printf "0.%02ds" $(( $RANDOM % 99 + 1)))"
			echo "sleeping for a random time (${RANDOM_WAIT}) before retrying..."
			sleep ${RANDOM_WAIT}
		fi
		COUNTER="$((COUNTER-1))"
		[ "${COUNTER}" -gt 0 ] && [ ${RETURN_VALUE} -ne 0 ]
	do :
	done

	# Creating state file (evaluated by systemd service file)
	touch /var/lib/live/config/user-setup
}

Cmdline
Config
